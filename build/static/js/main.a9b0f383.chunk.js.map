{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","components/Notification.js","services/people.js","components/App.js","index.js"],"names":["PersonForm","props","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Persons","personsToShow","removePerson","map","person","name","number","onClick","Filter","newSearch","handleSearchChange","Notification","message","messageType","console","log","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","setMessage","setMessageType","useEffect","phoneBook","filter","toLowerCase","startsWith","event","target","preventDefault","updateId","alreadyAdded","forEach","element","personObject","date","Date","toISOString","shortid","generate","concat","setTimeout","window","confirm","catch","error","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9b0f383.chunk.js","sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom';\n\n\nconst PersonForm = (props) => {\n    const {addPerson, newName, handleNameChange, newNumber, handleNumberChange} = props\n    return(\n        <div>\n            <form onSubmit={addPerson}>\n                <div>\n                name: <input value={newName} onChange={handleNameChange} />\n                </div>\n                <div>\n                number: <input value={newNumber} onChange={handleNumberChange} />\n                </div>\n                <div>\n                <button type=\"submit\" >add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n\nexport default PersonForm;","import React from 'react';\n// import ReactDOM from 'react-dom';\n\n\nconst Persons = ({personsToShow, removePerson}) => {\n\n    return(\n        <div>\n        {personsToShow.map(\n          (person) =>  <div>\n                          <p>{person.name}  {person.number}</p>\n                          <button onClick={() => removePerson(person)}>delete</button>\n                        </div>\n        )}\n      </div>\n    )\n\n}\n\n\nexport default Persons;","import React from 'react';\n\n\nconst Filter = (props) => {\n\n    const {newSearch, handleSearchChange} = props\n\n    \n\n  return (\n    <div>\n        filter shown with <input value={newSearch} onChange={handleSearchChange}/>\n    </div>\n  )\n\n}\n\n\nexport default Filter;","import React from 'react';\n\nconst Notification = ({ message, messageType }) => {\n    const errorMessageStyle = {\n      color: 'red',\n      background: 'lightgrey',\n      fontSize: 20,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10,\n    }\n\n    const normalMessageStyle = {\n      color: 'green',\n      background: 'lightgrey',\n      fontSize: 20,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10,\n    }\n    console.log(messageType);\n\n    if (messageType === 'normal'){\n    return (\n      <div style={normalMessageStyle}>\n        {message}\n      </div>\n    )}\n    if (messageType === 'error'){\n      return (\n        <div style={errorMessageStyle}>\n          {message}\n        </div>\n      )}\n    \n    // if (message === '') {\n      return null\n    // }\n\n    // return (\n    //     <div style={normalMessageStyle}>\n    //       {message}\n    //     </div>)\n  \n    \n  }\n\nexport default Notification;","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\n  export default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react';\n// import ReactDOM from 'react-dom';\nimport PersonForm from './PersonForm';\nimport Persons from './Persons';\nimport Filter from './Filter';\nimport Notification from './Notification'\nimport phoneBook from '../services/people'\nimport shortid from 'shortid'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setSearch ] = useState('')\n  const [message, setMessage] = useState('')\n  const [messageType, setMessageType] = useState('')\n\n  const hook = () => {\n    phoneBook\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }\n  useEffect(hook, [])\n  \n  const addPerson = (event) => {\n    event.preventDefault();\n    let alreadyAdded = false;\n    let updateId;\n    persons.forEach(element => {\n        if (element.name === newName){\n          alreadyAdded=true;\n          updateId = element.id;\n        }\n    });\n    if (alreadyAdded){\n\n      const personObject = {\n        number: newNumber,\n        name:newName,\n        date: new Date().toISOString(),\n      }\n\n      phoneBook\n      .update(updateId, personObject)\n      .then(response => {\n        setPersons(persons.map(person => person.id !== updateId ? person : response))\n        setNewName('');\n        setNewNumber('');\n      })\n\n        // setNewName('');\n        // setNewNumber('');\n        // window.alert(`${newName} is already added to phonebook`);\n    }\n    else{\n        const personObject = {\n        name:newName,\n        number: newNumber,\n        date: new Date().toISOString(),\n        id: shortid.generate(),\n      }\n      phoneBook\n      .create(personObject)\n      .then(response => {\n        setPersons(persons.concat(personObject))\n        \n        setMessage(\n          `Added '${newName}'`\n        )\n        setMessageType('normal');\n        setNewName('');\n        setNewNumber('');\n        setTimeout(() => {\n          setMessageType('');\n          setMessage('')\n        }, 5000)\n\n      })\n    \n    }\n  }\n  const removePerson =  person => {\n    console.log(person);\n    const result = window.confirm(`Do you want to delete ${person.id}`)\n    if(result){\n      phoneBook\n        .remove(person.id)\n        .then(response =>{\n          phoneBook\n            .getAll()\n            .then(response => {\n              setPersons(response)\n            })\n        })\n        .catch(error => {\n          setMessageType('error');\n          setMessage(\n            `Information of ${person.name} was already removed from server`\n          )\n          setTimeout(() => {\n            setMessageType('');\n            setMessage('');\n          }, 5000)\n          setPersons(persons.filter(n => n.id !== person.id))\n        })\n    }\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const personsToShow = newSearch \n  ? persons.filter(person => person.name.toLowerCase().startsWith(newSearch.toLowerCase())) \n  : persons\n\n \n\n  return(\n    <div>\n      <h2>Phonebook</h2>\n      <Notification \n      message={message} \n      messageType={messageType} \n        />\n      <Filter \n        newSearch={newSearch} \n        handleSearchChange={handleSearchChange}\n      />\n      <h2>add a new</h2>\n      <PersonForm \n        addPerson={addPerson} \n        newName={newName} \n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        />\n      <h2>Numbers</h2>\n      <Persons\n        personsToShow={personsToShow}\n        removePerson={removePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}